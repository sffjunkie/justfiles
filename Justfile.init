dotenv_filename := ".project"
set dotenv-filename := "{{dotenv_filename}}"

default_language := 'python'

just_repo := 'https://github.com/sffjunkie/justfiles'
just_branch := env_var_or_default('JUSTFILES_BRANCH', 'main')

home_dir := env_var('HOME')
dev_home := env_var_or_default("DEVELOPMENT_HOME", home_dir + "/development")

[private]
default:
    @just --list --unsorted --justfile {{justfile()}}

# Initialize a project directory
[no-cd]
init stage name language='python': (_init-dir stage name language) (init-just stage name)

[no-cd]
[private]
_init-dir stage name language:
    #!/bin/sh
    echo "Initializing project {{name}}"
    if [ ! -d "{{dev_home}}/{{stage}}/{{name}}" ]; then
        mkdir -p "{{dev_home}}/{{stage}}/{{name}}"
        echo "PROJECT_NAME={{name}}" > {{dev_home}}/{{stage}}/{{name}}/{{dotenv_filename}}
        echo "PROJECT_LANGUAGE={{language}}" >> {{dev_home}}/{{stage}}/{{name}}/{{dotenv_filename}}
    else
        echo "Project {{name}} already exists"
    fi
    cd "{{dev_home}}/{{stage}}/{{name}}"


[no-cd]
[private]
init-just stage="" name="":
    #!/bin/sh
    if [ "{{name}}" != "" ] && [ "{{stage}}" != "" ]; then
        cd {{dev_home}}/{{stage}}/{{name}}
    fi

    if [ ! -d ./just ]; then
        echo "Retrieving branch '{{just_branch}}' from '{{just_repo}}'"
        git clone -b {{just_branch}} {{just_repo}} just
    fi

    [ ! -h Justfile ] && ln -s just/Justfile.main Justfile || :
