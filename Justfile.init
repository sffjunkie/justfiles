default_language := 'python'
default_stage := 'project'  # or 'bluesky'

just_repo := 'https://github.com/sffjunkie/justfiles'
just_branch := env_var_or_default('JUSTFILES_BRANCH', 'main')

home_dir := env_var('HOME')
dev_home := env_var_or_default("DEVELOPMENT_HOME", home_dir + "/development")

default:
    @just --list --unsorted --justfile {{justfile()}}

[no-cd]
init-project name language='python': (_init-base name "project" language) init-just

[no-cd]
init-bluesky name language='python': (_init-base name "bluesky" language) init-just

[no-cd]
_init-base name stage language:
    #!/bin/sh
    echo "Initializing project {{name}}"
    if [ ! -d "{{dev_home}}/{{stage}}/{{name}}" ]; then
        mkdir -p "{{dev_home}}/{{stage}}/{{name}}"
        echo "PROJECT_NAME={{name}}" > {{dev_home}}/{{stage}}/{{name}}/.project
        echo "PROJECT_LANGUAGE={{language}}" >> {{dev_home}}/{{stage}}/{{name}}/.project
    else
        echo "Project {{name}} already exists"
    fi
    cd "{{dev_home}}/{{stage}}/{{name}}"


[no-cd]
init-just:
    #!/bin/sh
    if [ ! -f ./.project ]; then
        echo "Not in a managed project"
        exit 1
    fi
    
    if [ ! -d ./just ]; then
        echo "Retrieving branch '{{just_branch}}' from '{{just_repo}}'"
        git clone -b {{just_branch}} {{just_repo}} just
    fi

    [ ! -h Justfile ] && ln -s just/Justfile.main Justfile || :
